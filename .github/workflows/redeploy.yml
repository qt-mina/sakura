name: Bot Health Check & Auto-Redeploy

on:
  schedule:
    - cron: '0,10,20,30,40,50 * * * *'  # Runs at :00, :10, :20, :30, :40, :50 of every hour
  workflow_dispatch:  # Manual trigger for testing

jobs:
  health-check:
    runs-on: ubuntu-latest
    steps:
      - name: Debug - Workflow Started
        run: |
          echo "Workflow started at $(date '+%Y-%m-%d %H:%M:%S UTC')"
          echo "Attempting to send test message..."

      - name: Send workflow start notification
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S UTC')
          RESPONSE=$(curl -s -X POST "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.CHAT_ID }}" \
            -d "text=🔔 Workflow Started%0A🕒 Time: $TIMESTAMP%0A🔍 Beginning health check..." \
            -d "parse_mode=HTML")
          echo "Telegram API Response: $RESPONSE"

      - name: Check bot health
        id: health
        run: |
          echo "Checking bot health..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/getMe")
          
          echo "Health check response: $RESPONSE"
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S UTC')
          
          if [ "$RESPONSE" = "200" ]; then
            echo "status=healthy" >> $GITHUB_OUTPUT
            echo "message=✅ Bot Status: HEALTHY%0A🕒 Time: $TIMESTAMP%0A📊 HTTP Code: $RESPONSE" >> $GITHUB_OUTPUT
          else
            echo "status=down" >> $GITHUB_OUTPUT
            echo "message=❌ Bot Status: DOWN%0A🕒 Time: $TIMESTAMP%0A📊 HTTP Code: $RESPONSE%0A⚠️ Initiating recovery..." >> $GITHUB_OUTPUT
          fi

      - name: Send status update
        run: |
          echo "Sending status update..."
          RESPONSE=$(curl -s -X POST "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.CHAT_ID }}" \
            -d "text=${{ steps.health.outputs.message }}" \
            -d "parse_mode=HTML")
          echo "Telegram API Response: $RESPONSE"

      - name: Wait before redeploying
        if: steps.health.outputs.status == 'down'
        run: |
          echo "Bot is down, waiting 30 seconds before recheck..."
          sleep 30

      - name: Recheck bot health
        id: recheck
        if: steps.health.outputs.status == 'down'
        run: |
          echo "Rechecking bot health..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/getMe")
          
          echo "Recheck response: $RESPONSE"
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S UTC')
          
          if [ "$RESPONSE" = "200" ]; then
            echo "status=healthy" >> $GITHUB_OUTPUT
            echo "message=✅ Bot Status: RECOVERED%0A🕒 Time: $TIMESTAMP%0A📊 HTTP Code: $RESPONSE%0A💡 No redeploy needed" >> $GITHUB_OUTPUT
          else
            echo "status=down" >> $GITHUB_OUTPUT
            echo "message=❌ Bot Status: STILL DOWN%0A🕒 Time: $TIMESTAMP%0A📊 HTTP Code: $RESPONSE%0A🔄 Triggering redeploy now..." >> $GITHUB_OUTPUT
          fi

      - name: Send recheck update
        if: steps.health.outputs.status == 'down'
        run: |
          echo "Sending recheck update..."
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.CHAT_ID }}" \
            -d "text=${{ steps.recheck.outputs.message }}" \
            -d "parse_mode=HTML"

      - name: Trigger Render Redeploy
        id: redeploy
        if: steps.health.outputs.status == 'down' && steps.recheck.outputs.status == 'down'
        run: |
          echo "Triggering redeploy..."
          DEPLOY_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST ${{ secrets.REDEPLOY }})
          
          echo "Deploy response: $DEPLOY_RESPONSE"
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S UTC')
          
          if [ "$DEPLOY_RESPONSE" = "200" ] || [ "$DEPLOY_RESPONSE" = "201" ]; then
            echo "success=true" >> $GITHUB_OUTPUT
            echo "message=🔄 Redeploy TRIGGERED%0A🕒 Time: $TIMESTAMP%0A📊 Deploy Response: $DEPLOY_RESPONSE%0A⏳ Bot will restart in 2-3 minutes" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
            echo "message=❌ Redeploy FAILED%0A🕒 Time: $TIMESTAMP%0A📊 Deploy Response: $DEPLOY_RESPONSE%0A🚨 Manual intervention required!" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Send redeploy status
        if: steps.health.outputs.status == 'down' && steps.recheck.outputs.status == 'down'
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.CHAT_ID }}" \
            -d "text=${{ steps.redeploy.outputs.message }}" \
            -d "parse_mode=HTML"

      - name: Send workflow failure alert
        if: failure()
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S UTC')
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.CHAT_ID }}" \
            -d "text=🚨 WORKFLOW ERROR%0A🕒 Time: $TIMESTAMP%0A⚠️ Health check workflow failed%0A🔗 Check: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            -d "parse_mode=HTML" \
            || true